using System;
using System.IO;
using System.Collections.Generic;

namespace lesson2
{
    class MainClass
    {
        public static void Main(string[] args)
        {
            
            //fix output so it looks formatted
            //get rid of testing statements - done
            //create classes for each ticket type - broken
            //different arrays for each class?
            //create three list arrays
            //need type of ticket field
            //read type of ticket field then switch to appropriate array

            //Tickets bug = new Bugs();
            //Tickets enhance = new Enhancement();
            //Tickets task = new Task();

            List<Tickets> Ticket = new List<Tickets>();

            //read csv file
            string file = "tickets.csv";
            StreamReader ticketFile = new StreamReader(file);
            int ticketNumber = 0;
            while (!ticketFile.EndOfStream)
            {
                string line = ticketFile.ReadLine();
                string[] arg = line.Split('|');
                int type = arg.Length;
                ticketNumber = Int32.Parse(arg[0]);
                Ticket.Add(new Tickets(Int32.Parse(arg[0]),
                    arg[1], arg[2], arg[3], arg[4],
                    arg[5], arg[6]));
            }
            ticketFile.Close();
            Console.WriteLine("Welcome to our Ticket system");
            MenuOptions(ticketNumber, Ticket);
        }
        public static void MenuOptions(int ticketNumber, List<Tickets> Ticket)
        {
            //user picks option to either create new or list current
            string choice;
            do
            {
                Console.WriteLine("Menu:");
                Console.WriteLine("(1) Create a New Ticket");
                Console.WriteLine("(2) List Current Tickets");
                choice = Console.ReadLine();
            } while (choice != "1" && choice != "2" && choice !="3");
            //modify input for defining what type of ticket it is. - done
            if (choice == "1")
            {
                Console.WriteLine("What type of ticket is it");
                Console.WriteLine("(b)ug, (e)nhancment, or (t)ask");
                choice =Console.ReadLine();
                ticketNumber++;
                CreateTicket(ticketNumber,Ticket, choice);
                
               //
            }
            if (choice == "2")
            {
                ListTickets(ticketNumber, Ticket);
            }
            if (choice == "3")
            {
                eraseAll();
            }
        }

        private static void eraseAll()
        {
            
        }

        public static void CreateTicket(int ticketNumber, List<Tickets> Ticket, string choice)
        {
            //List<Tickets> thisMethodTickets = Ticket;
            
            string summary, status = "Open", priority, submitter, assignedTo, watching = ""; //assigned to can be generated by number of tickets held;
            //StreamWriter ticketFile = new StreamWriter(file);

            Console.WriteLine("Please enter a brief summary of the issue");
            summary = Console.ReadLine();
            Console.WriteLine("What is the priority of this issue (High, Normal, Low");
            priority = Console.ReadLine();
            Console.WriteLine("What is your Name?");
            submitter = Console.ReadLine();
            Console.WriteLine("Who should this ticket be assigned to?");
            assignedTo = Console.ReadLine();

            Console.WriteLine("Who will be watching this ticket?(type 'none' when done)");

            while(watching != "none"){
            watching = Console.ReadLine();
            }
            switch(choice){
                case "b":
                    Console.WriteLine("what is the severity of this issue?");
                    string severity = Console.ReadLine();

                    Ticket.Add(new Bugs (ticketNumber, summary, status, priority, submitter,
                        assignedTo, watching, severity));
                    break;
                case "e":
                    //software, cost, reason, estimate
                    Console.WriteLine("What software is needed?");
                    string software = Console.ReadLine();
                    Console.WriteLine("What is the cost?");
                    string cost = Console.ReadLine();
                    Console.WriteLine("What is the reason for the enhancement?");
                    string reason = Console.ReadLine();
                    Console.WriteLine("What software is needed?");
                    string estimate = Console.ReadLine();
                    
                    break;
                case "t":
                    //project name, due date
                    Console.WriteLine("What should the project be named?");
                    string projectName = Console.ReadLine();
                    Console.WriteLine("When is it due?");
                    string dueDate = Console.ReadLine();
                    
                break;

            }
            Ticket.Add(new Tickets(ticketNumber,summary, status, priority, submitter, assignedTo, watching));
            

            saveFile(Ticket);
            MenuOptions(ticketNumber, Ticket);

        }
        public static void ListTickets(int ticketNumber,List<Tickets> Ticket)
        {
            string file = "tickets.csv";

            if (File.Exists(file))
            {
                StreamReader ticketFile = new StreamReader(file);
                while (!ticketFile.EndOfStream)
                {
                    string line = ticketFile.ReadLine();
                    string[] arg = line.Split('|');
                    //Console.WriteLine("Ticket #: {0}\nStatus: {1}\nPriority: {2}\nSubmitted by: {3}\n",arg[0],arg[1],arg[2],arg[3]);

                }
                ticketFile.Close();

            }
            else
            {
                Console.WriteLine("Error: File does not exist");
            }
        
            for (int i = 0; i < Ticket.Count;i++){
                Console.WriteLine("Ticket Number: " + Ticket[i].ticketNumber);
                Console.WriteLine("Summary of Issue: " + Ticket[i].summary);  
                Console.WriteLine("Ticket Status: " + Ticket[i].status);
                Console.WriteLine("Priority: " + Ticket[i].priority);
                Console.WriteLine("Submitted By: " + Ticket[i].submittedBy);
                Console.WriteLine("Ticket is assigned to: " + Ticket[i].assignedTo);
                Console.WriteLine(" Who is watching the ticket? " + Ticket[i].watching);
                Console.WriteLine("");
            }


            MenuOptions(ticketNumber, Ticket);

        }

        public static void saveFile(List<Tickets> Ticket)
        {
            string file = "tickets.csv";
            if (!File.Exists(file))
            {
                using (StreamWriter ticketFile = File.CreateText(file))
                {
                    for (int i = 0; i < Ticket.Count; i++)
                    {
                        ticketFile.WriteLine("{0}|{1}|{2}|{3}|{4}|{5}|{6}", Ticket[i].ticketNumber, Ticket[i].summary,
                                Ticket[i].status, Ticket[i].priority, Ticket[i].submittedBy, Ticket[i].assignedTo, Ticket[i].watching);
                    }
                    Console.WriteLine("A Ticket has been created for you.");
                    ticketFile.Close();
                }
            }
            else
            {

                StreamWriter ticketFile = new StreamWriter(file);
                {
                    for (int i = 0; i < Ticket.Count; i++)
                    {
                        ticketFile.WriteLine("{0}|{1}|{2}|{3}|{4}|{5}|{6}", Ticket[i].ticketNumber, Ticket[i].summary,
                                Ticket[i].status, Ticket[i].priority, Ticket[i].submittedBy, Ticket[i].assignedTo, Ticket[i].watching);
                    }
                    Console.WriteLine("A Ticket has been created for you.");
                    ticketFile.Close();
                }
            }
        }
    }
}

